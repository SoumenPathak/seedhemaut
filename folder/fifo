#include <stdio.h>

#define MAX_FRAMES 3
int find(int page, int frames[], int n) {
    for (int i = 0; i < n; i++) {
        if (frames[i] == page) {
            return 1; // Page found
        }
    }
    return 0; // Page not found
}
void FIFO(int pages[], int n) {
    int frames[MAX_FRAMES];
    int framePointer = 0; // Points to the next frame to be replaced
    int pageFaults = 0;

    // Initialize all frames to -1, indicating no page loaded initially
    for (int i = 0; i < MAX_FRAMES; i++) {
        frames[i] = -1;
    }
    for (int i = 0; i < n; i++) {
        int page = pages[i];
        if (!find(page, frames, MAX_FRAMES)) {
            frames[framePointer] = page;
            framePointer = (framePointer + 1) % MAX_FRAMES;
            pageFaults++;
        }
        printf("Page %d: ", page);
        for (int j = 0; j < MAX_FRAMES; j++) {
            printf("%d ", frames[j]);
        }
        printf("\n");
    }

    printf("Total Page Faults (FIFO): %d\n", pageFaults);
}
int main() {
    int pages[] = {1, 3, 0, 3, 5, 6, 3};
    int n = sizeof(pages) / sizeof(pages[0]);

    printf("FIFO Page Replacement Algorithm\n");
    FIFO(pages, n);
    printf("\n");

    return 0;
}
